{
    "collab_server" : "",
    "contents" : "\nlibrary(dplyr)\nlibrary(highcharter)\n#### \ninn <- read.csv(\"平日_in.csv\",sep = \",\", fileEncoding = \"big5\")\nout <- read.csv(\"平日_out.csv\",sep = \",\", fileEncoding = \"big5\")\nvinn <- read.csv(\"假日_in.csv\",sep = \",\", fileEncoding = \"big5\")\nvout <- read.csv(\"假日_out.csv\",sep = \",\", fileEncoding = \"big5\")\n\n# 平日進站平均mean.n.inn\nmean.n.inn <- NULL \nfor (i in 0:23) {\n  a <- filter(inn, 時段==i) \n  k <- apply(a[-c(1,2)], 2, mean)\n  mean.n.inn <- rbind(mean.n.inn, k)\n}\nmean.n.inn <- mean.n.inn[-c(3:5),-1] %>% t() %>% as.data.frame()\ncolnames(mean.n.inn) = c(0,1,5:23)\n\n#write.csv(mean.n.inn, \"mean.in.csv\", fileEncoding = \"big5\")\n\n# 平日出站平均mean.n.out\nmean.n.out <- NULL \nfor (i in 0:23) {\n  a <- filter(out, 時段==i) \n  k <- apply(a[-c(1,2)], 2, mean)\n  mean.n.out <- rbind(mean.n.out, k)\n}\nmean.n.out <- mean.n.out[-c(3:5),-1] %>% t() %>% as.data.frame()\ncolnames(mean.n.out) = c(0,1,5:23)\n\n# 假日進站平均mean.v.inn\nmean.v.inn <- NULL \nfor (i in 0:23) {\n  a <- filter(vinn, 時段==i) \n  k <- apply(a[-c(1,2)], 2, mean)\n  mean.v.inn <- rbind(mean.v.inn, k)\n}\nmean.v.inn <- mean.v.inn[,-1] %>% t() %>% as.data.frame()\ncolnames(mean.v.inn) = c(0:23)\n\n# 假日出站平均mean.v.out\nmean.v.out <- NULL \nfor (i in 0:23) {\n  a <- filter(vout, 時段==i) \n  k <- apply(a[-c(1,2)], 2, mean)\n  mean.v.out <- rbind(mean.v.out, k)\n}\nmean.v.out <- mean.v.out[,-1] %>% t() %>% as.data.frame()\ncolnames(mean.v.out) = c(0:23)\n\n# 平日進站中位數med.n.inn \nmed.n.inn <- NULL \nfor (i in 0:23) {\n  a <- filter(inn, 時段==i) \n  k <- apply(a[-c(1,2)], 2, median)\n  med.n.inn <- rbind(med.n.inn, k)\n}\nmed.n.inn <- med.n.inn[-c(3:5),-1] %>% t() %>% as.data.frame()\ncolnames(med.n.inn) = c(0,1,5:23)\n\n# 假日進站中位數med.v.inn\nmed.v.inn <- NULL \nfor (i in 0:23) {\n  a <- filter(vinn, 時段==i) \n  k <- apply(a[-c(1,2)], 2, median)\n  med.v.inn <- rbind(med.v.inn, k)\n}\nmed.v.inn <- med.v.inn[-c(3:5),-1] %>% t() %>% as.data.frame()\ncolnames(med.v.inn) = c(0,1,5:23)\n\n# for share\nt(mean.n.inn) %>% as.data.frame() %>% mutate(time=5:25) -> new.mean.in\nwrite.csv(new.mean.in, \"mean.in.csv\", row.names = FALSE, fileEncoding = \"big5\")\nwrite.csv(mean.n.inn, \"mean.n.csv\", fileEncoding = \"big5\")\nwrite.csv(mean.n.out, \"mean.o.csv\", fileEncoding = \"big5\")\n\n###############\nhighchart() %>%\n  hc_title(text =\"平日\") %>%\n  hc_xAxis(categories=row.names(mean.n.out) ,title = list(text = \"時間點\") ) %>%\n  hc_yAxis(title = list(text = \"捷運站\")) %>%\n  hc_add_series(data= mean.n.inn$`6` , name=\"in6\") %>%\n  hc_add_series(data= mean.n.inn$`7` , name=\"in7\") %>%\n  hc_add_series(data= mean.n.inn$`8` , name=\"in8\") %>%\n  hc_add_series(data= med.n.inn$`6` , name=\"min6\") %>%\n  hc_add_series(data= med.n.inn$`7` , name=\"min7\") %>%\n  hc_add_series(data= med.n.inn$`8` , name=\"min8\") \n\n  hc_add_series(data= mean.n.out$`6`, name=\"out6\") %>%\n  hc_add_series(data= mean.n.out$`7`, name=\"out7\") %>%\n  hc_add_series(data= mean.n.out$`8`, name=\"out8\") \n\nhighchart() %>%\n  hc_title(text =\"平日\") %>%\n  hc_xAxis(categories=row.names(mean.n.out) ,title = list(text = \"時間點\") ) %>%\n  hc_yAxis(title = list(text = \"捷運站\")) %>%\n  hc_add_series(data= mean.n.inn$`17` , name=\"in17\") %>%\n  hc_add_series(data= mean.n.inn$`18` , name=\"in18\") %>%\n  hc_add_series(data= mean.n.inn$`19` , name=\"in19\") %>%\n  hc_add_series(data= mean.n.out$`17`, name=\"out17\") %>%\n  hc_add_series(data= mean.n.out$`18`, name=\"out18\") %>%\n  hc_add_series(data= mean.n.out$`19`, name=\"out19\") \n\n  \nhighchart() %>%\n  hc_title(text =\"假日\") %>%\n  hc_xAxis(categories=row.names(mean.v.out) ,title = list(text = \"時間點\") ) %>%\n  hc_yAxis(title = list(text = \"捷運站\")) %>%\n  hc_add_series(data= mean.v.inn$`10` , name=\"in10\") %>%\n  hc_add_series(data= mean.v.inn$`11` , name=\"in11\") %>%\n  hc_add_series(data= mean.v.inn$`12` , name=\"in12\") %>%\n  hc_add_series(data= mean.v.out$`10`, name=\"out10\") %>%\n  hc_add_series(data= mean.v.out$`11`, name=\"out11\") %>%\n  hc_add_series(data= mean.v.out$`12`, name=\"out12\") \n\nhighchart() %>%\n  hc_title(text =\"平日中位數\") %>%\n  hc_xAxis(categories=row.names(med.n.inn) ,title = list(text = \"時間點\") ) %>%\n  hc_yAxis(title = list(text = \"捷運站\")) %>%\n  hc_add_series(data= med.n.inn$`6` , name=\"in6\") %>%\n  hc_add_series(data= med.n.inn$`7` , name=\"in7\") %>%\n  hc_add_series(data= med.n.inn$`8` , name=\"in8\") \n \nhighchart() %>%\n  hc_xAxis(categories= colnames(mean.n.inn) ) %>%\n  hc_add_series(data= as.numeric(mean.n.inn[42,]), name=\"北車進站\") %>%\n  hc_add_series(data= as.numeric(mean.n.out[42,]), name=\"北車出站\") %>%\n  hc_add_series(data= as.numeric(mean.n.inn[41,]), name=\"台大醫院平日進站\") %>%\n  hc_add_series(data= as.numeric(mean.n.out[41,]), name=\"台大醫院平日出站\")\n\nhighchart() %>%\n  hc_xAxis(categories= new.mean.in$time) %>%\n  hc_add_series(data= new.mean.in$台北車站 , name=\"北車\") %>% \n  hc_add_series(data= new.mean.in$景安 , name=\"景安\") %>%  \n  hc_add_series(data= new.mean.in$頂溪 , name=\"頂溪\") %>% \n  hc_add_series(data= new.mean.in$市政府 , name=\"市政府\") %>% \n  hc_add_series(data= new.mean.in$松江南京 , name=\"松江南京\") %>%  \n  hc_add_series(data= new.mean.in$公館 , name=\"公館\") %>% \n  hc_add_series(data= new.mean.in$萬芳社區 , name=\"萬芳社區\") %>% \n  hc_add_series(data= new.mean.in$板橋 , name=\"板橋\") %>% \n  hc_add_series(data= new.mean.in$大直 , name=\"大直\") %>% \n  hc_add_series(data= new.mean.in$淡水 , name=\"淡水\") %>% \n  hc_add_series(data= new.mean.in$西門 , name=\"西門\") \n  \n  \n\n# AM 5-9 進站總人數\nfilter(inn , 時段 %in% c(5:9)) %>%\n  select(-c(2,3)) %>%\n  group_by(日期) %>% \n  summarise_each(funs(sum(.))) -> n.mor.in \n\nsummary(n.mor.in)\n\ncolnames(n.mor.in)[order(apply(n.mor.in[-1], 2, mean) ,decreasing = T)+1][11:20] \n\nn.mor.in.mean <- filter(inn , 時段 %in% c(5:9)) %>%\n  select(-c(1:3)) %>%\n  summarise_each(funs(mean(.))) %>% t() %>% as.data.frame() %>%\n  mutate( mrt= colnames(inn)[-c(1:3)] ) \n\nn.mor.in.mean <- merge(n.mor.in.mean, mrt, by.x=\"mrt\", by.y=\"捷運名稱\", all=T) \n\ncolnames(n.mor.in.mean) <- c(\"mrt_name\", \"num\", colnames(n.mor.in.mean)[3:5])\n\n\n# 想看每個時段站的人次排序\n# 平日出站排序 mean.n.out.s\nmatrix(apply(mean.n.out, 2, order, decreasing=T) , ncol = 21)  %>% as.data.frame() %>%\nsapply( function(x) rownames(mean.n.out)[x]) %>% as.data.frame() -> mean.n.out.s\ncolnames(mean.n.out.s) = c(0,1,5:23)\ntable(as.character(unlist(mean.n.out.s[1:10,]))) %>% as.data.frame()-> a\n  filter(Freq < 5) %>%\n  View\nlength(a)\n\n# 平日進站排序 mean.n.inn.s\nmatrix(apply(mean.n.inn, 2, order, decreasing=T) , ncol = 21)  %>% as.data.frame() %>%\n  sapply( function(x) rownames(mean.n.inn)[x]) %>% as.data.frame() -> mean.n.inn.s\ncolnames(mean.n.inn.s) = c(0,1,5:23)\ntable(as.character(unlist(mean.n.inn.s[1:10,])))\ntable(as.character(unlist(mean.n.inn.s[99:108,])))\n\na <- as.character(unlist(mean.n.out.s[1:10,]))\nb <- as.character(unlist(mean.n.inn.s[1:10,]))\ntable(a,b) %>% as.data.frame() %>% View\n\n\n# 假日出站排序 mean.v.out.s\nmatrix(apply(mean.v.out, 2, order, decreasing=T) , ncol = 24)  %>% as.data.frame() %>%\n  sapply( function(x) rownames(mean.n.out)[x]) %>% as.data.frame() -> mean.v.out.s\ncolnames(mean.v.out.s) = c(0:23)\ntable(as.character(unlist(mean.v.out.s[1:10,])))  %>% as.data.frame() -> b\n  \n\nmerge(a,b, by=c(\"Var1\", \"Var1\"), all = T) #淡水 劍潭\n\n\n############ 租屋資料 ###################################\nrent <- read.csv(\"rent_taipei.csv\", fileEncoding = \"big5\")\ntable(rent$主要用途)\ntable(rent$建物型態)\n\nfilter(rent, 建物型態==\"工廠\") %>% View #工廠的單價每坪方公尺皆為空白\nfilter(rent, 租賃標的 == \"土地\") %>% View\n\nrent[-is.na(rent$總額元), ] %>%\n  filter(租賃總面積平方公尺.1 != 0) %>% \n  filter(租賃標的 != \"土地\") %>%\n  filter(租賃標的 != \"車位\") %>%\n  mutate(price = 總額元/(0.3025*租賃總面積平方公尺.1)) -> rentp\nrentp %>%\n  group_by(鄉鎮市區) %>%\n  summarise(mean=mean(price, na.rm=T), median=median(price, na.rm=T)) %>%\n  arrange(mean) %>% View\n\n\n# 捷運站經緯度\nmrt <- read.csv(\"捷運站經緯度.csv\", fileEncoding = \"big5\")\ntable(mrt$區)\n\nlibrary(geosphere)\n\nt <- table(rentp$鄉鎮市區) %>% rownames()\nmrt.rent.mean <- NULL\nr <- filter(rentp, 鄉鎮市區 == a[1]) \nm <- filter(mrt, 區 == a[1]) \nk <- NULL\n\nfor (j in 1:nrow(m)) {\n  for (i in 1:nrow(r)) {\n    r[i,19]=as.numeric( distm( c(r$經度[i],r$緯度[i]), c(m$經度[j], m$緯度[j]),\n                               fun = distHaversine) )\n  }\n  a <- filter(r, V19 < 500 ) %>% summarise(mean = mean(price)) \n  k <- rbind(k,a)\n}\n\nrow.names(k) <- m$捷運站名稱\nmrt.rent.mean <- rbind(mrt.rent.mean, k)\n\n\n\n#### 算捷運站跟每筆租屋資料距離 ##############\n\nlibrary(parallel)\nrentp %>% select(10) -> r\ncl <-makeCluster(getOption(\"cl.cores\",3) )\nfor(j in 1:108){\n  for(i in 1:nrow(rentp)){\n    r[i,j+1]<-as.numeric( distm ( c(rentp$經度[i],rentp$緯度[i]), c(mrt$經度[j], mrt$緯度[j]), \n                                fun = distHaversine) )\n  }\n}\nstopCluster(cl)\n\n######### 算住商工個數 ################\ncolnames(r) = c(\"主要用途\", as.character(mrt$捷運名稱 ) )\nr$type[r$主要用途 %in% c(\"住家用\", \"國民住宅\")] <- \"住\" \nr$type[r$主要用途 %in% c(\"工商用\", \"商業用\", \"住商用\")] <- \"商\" \nr$type[r$主要用途 %in% c(\"住工用\", \"工業用\")] <- \"工\" \n\na = select(b, t)\nfor (i in 1:108) {\n  r %>%\n    select(i+1,type) -> c \n    c[c[,1] < 600 , ] %>% \n    group_by(type) %>%\n    summarise_each(funs(n())) -> b\n\na <- merge(a,b ,by = c(\"type\", \"type\"), all=T)\n}\n\n######## 佩雯的 ###################\n\nbb <- read.csv(\"ratio.csv\", fileEncoding = \"big5\")\ncolnames(b) <-  c(\"type\", as.character(mrt$捷運名稱 ) )\ncolnames(a) <-  c(\"type\", as.character(mrt$捷運名稱 ) )\na[is.na(a) ]= 0\nbb[is.na(bb) ]= 0\nbb <- rbind(bb[,-1], apply(bb[1:4,-1], 2, sum)) \nbb[8,] <- bb[1,]/bb[7,]\nbb[9,] <- bb[2,]/bb[7,]\nbb[10,] <- bb[3,]/bb[7,]\n\n# 租屋的\naaa <- matrix(c(rep(0,5), 10,rep(0,6),10,10,0,rep(10,2),rep(0,7)), ncol = 6, byrow = T)\na[,88:93] <- a[,88:93]+aaa\naa <- rbind(a[,-1], apply(a[,-1], 2, sum))  \naa[6,] <- aa[1,]/aa[5,]\naa[7,] <- aa[2,]/aa[5,]\naa[8,] <- aa[3,]/aa[5,]\naa[9,] <- aa[2,]/aa[3,]\n\napply(aa[6:8, ], 2, max) %>% as.data.frame() %>%View()\n\na1 <-  apply(aa[6:8,], 2, order, decreasing=T) %>% as.data.frame() %>%\n  sapply(function(x) b$type[1:3][x])  \na1[ a1 != \"商\"] =0\na1[ a1 == \"商\"] =1\n\nb2 <-  apply(bb[8:10,-1], 2, order, decreasing=T) %>% as.data.frame() %>%\n  sapply(function(x) b$type[1:3][x]) \nb2[ b2 != \"工\"] =0\nb2[ b2 == \"工\"] =1\n\n# 先擺著\nrbind(a1[1,], a2[1,]) %>% rbind(b1[1,]) %>% rbind(b2[1,]) %>%\n  View()\n\n################# 畫圖的 ###############\nlibrary(rgdal)\nlibrary(rgeos)\nlibrary(ggplot2)\nlibrary(maptools)\nlibrary(ggmap)\nlibrary(GGally)\n\nggpairs(Traingdata[, c(3,4,7,13:15)]) + \n  theme_grey(base_family=\"STHeiti\")\n\nggplot(Traingdata, aes(房價中位數.區中位數)) +\n  geom_histogram(bins = 30)+ \n  geom_vline(xintercept =c(1.25, 0.9), color=\"red\")+\n  labs( x = \"房價中位數/行政區房價中位數\")+\n  annotate(\"text\", x =c(1.27, 0.92), y =10, label =c(\"1.25\", \"0.9\"),family=\"STHeiti\", colour = \"blue\", size=5) +\n  theme_grey(base_family=\"STHeiti\")\n\nggplot(Traingdata, aes(流量.人口)) +\n  geom_histogram(bins = 120)+ \n  geom_vline(xintercept =0.045, color=\"red\")+\n  labs( x = \"流量/權重人口\")+\n  annotate(\"text\", x =0.08, y =30, label =\"0.045\",family=\"STHeiti\", colour = \"blue\", size=5) +\n  theme_grey(base_family=\"STHeiti\")\n\nggplot(Traingdata[-68,], aes(x=流量.人口, y=房價中位數.區中位數)) +\n # geom_point()  +\n  labs( x = \"流量/權重人口\", y=\"房價中位數/行政區房價中位數\")+\n annotate(\"text\",x=Traingdata$流量.人口[-68], y=Traingdata$房價中位數.區中位數[-68], label =Traingdata$mrt[-68] ,family=\"STHeiti\", size=1.5, color=\"#495397\") +\n annotate(\"text\",x=Testingdata$流人 , y=Testingdata$房價中位數.區中位數, label =Testingdata$mrt, colour = \"blue\", family=\"STHeiti\", size=3) +\n  geom_vline(xintercept =0.045, color=\"red\")+\n  geom_hline(yintercept =c(1.25, 0.9), color=\"red\")+\n  theme_grey(base_family=\"STHeiti\")\n\nggplot(Testingdata, aes(x=流人, y=房價中位數.區中位數))+\n  geom_point() +\n  labs( x = \"流量/權重人口\", y=\"房價中位數/行政區房價中位數\")+\nannotate(\"text\",x=Testingdata$流人 , y=Testingdata$房價中位數.區中位數+0.01, label =Testingdata$mrt, colour = \"blue\", family=\"STHeiti\", size=3) +\n  geom_vline(xintercept =0.045, color=\"red\")+\n  geom_hline(yintercept =c(1.25, 0.9), color=\"red\")+\n  theme_grey(base_family=\"STHeiti\")\n\n\n\n\n########### 整併資料 #######################################\n\n# 年齡與鄉里資料\nmrt.li <- read.csv(\"mrt.ratio.csv\") %>% select(-1)\nage <- read.csv(\"里年齡.csv\", fileEncoding = \"big5\") %>% select(1:3,54)\ntraing <- read.csv(\"TrainingDataRule1.csv\", fileEncoding = \"big5\") %>% select(-c(1,5,6,10))\ntraing2 <- read.csv(\"TrainingDataRule2.csv\", fileEncoding = \"big5\" ) %>% select(-c(1,6,7,11))\np <- read.csv(\"population.csv\") %>% select(-c(1,2)) %>% \n  mutate(name=c(as.character(mrt$捷運名稱), as.character(testing$捷運站)) ) \nmini <- read.csv(\"mini.csv\", fileEncoding = \"big5\") \nrow.names(mini) = mini$X\ntesting <- read.csv(\"TestingData.csv\", fileEncoding = \"big5\")\n\n# 15-64 人數\nmrt.age <- merge(mrt.li, age, by=c(\"縣市\",\"區\", \"里\"), all.x=T) %>%\n  mutate(ratio=sum/人數)\n\nrage <-  mrt.age$sum %*% as.matrix(mrt.age[,6:113]) %>% round() %>% t() %>%\n  as.data.frame() %>%\n  mutate(name=c(mrt$捷運名稱))\ncolnames(rage)[1] = \"15-64\"\n\n# 最小統計區\nm <- mini[,-1]  %>% t() %>%\n  as.data.frame() %>% mutate(name=c(as.character(mrt$捷運名稱), as.character(testing$捷運站))) \n\n# Traing data 產出\nTraingdata <- merge(traing, p[1:108,], by.x=\"mrt\", by.y=\"name\", all=T) %>% \n  merge( rage, by.x=\"mrt\", by.y=\"name\", all=T) %>% \n  mutate(age.ratio=`15-64`/平均人口) %>%\n  merge(m[1:108, ] , by.x=\"mrt\", by.y=\"name\", all=T) \n\nTraingdata2 <- merge(traing2, p[1:108, ], by.x=\"mrt\", by.y=\"name\", all=T) %>% \n  merge( rage, by.x=\"mrt\", by.y=\"name\", all=T) %>% \n  mutate(age.ratio=`15-64`/平均人口) %>%\n  merge(m[1:108, ] , by.x=\"mrt\", by.y=\"name\", all=T) \n\ncor(Traingdata[,-c(1,2)]) %>% View\n\n# traing data output\nwrite.csv(Traingdata , \"Trainingdata1.csv\", fileEncoding = \"big-5\", row.names = F)\nwrite.csv(Traingdata2 , \"Trainingdata2.csv\", fileEncoding = \"big-5\", row.names = F)\n\n######## try model ###############\nlm1 <- lm(流量~房價中位數+平均人口+age.ratio+工業區+商業區+住宅區, data = Traingdata)\nlm2 <- lm(流量~ I(房價中位數*平均人口)+房價中位數+平均人口+age.ratio+工業區+商業區+住宅區 , data = Traingdata)\nlm3 <- lm(I(log(流量))~ I(房價中位數*平均人口)+房價中位數+平均人口+age.ratio+工業區+商業區+住宅區 , data = Traingdata)\nlm4 <- lm( I(log(流量)) ~ 房價中位數 + `15-64` + 工業區 + 商業區 + 住宅區+ I( 房價中位數^2 * 住宅區) + I(房價中位數 * (商業區 + 工業區)) , data=Traingdata[-c(68,83),] )\n\nadd1(im1, test = \"F\")\n\nsummary(lm4)\npar(mfrow=c(1,2))\nplot(lm4)\nlm4 <- step(lm4, test=\"F\") # stepwise\nstep(lm1, direction = \"backward\") #用完整的模型給他backward\n\n# 比較兩個模型 後面的要包含前面的\nanova(lm2, lm3)\n\n## box cox transfrom \nlibrary(MASS)\n##### buliding model & boxcox #####\nTraingdata <- read.csv(\"Trainingdata1.csv\", fileEncoding = \"big5\")\ny = lm(流量~ 房價中位數 + 工業區 + 商業區 + 住宅區 + I(房價中位數*X15.64*(5*住宅區-工業區-商業區))  , data=Traingdata[-68,] )\nboxcox(y, lambda = seq(-0.25, 0.25, length = 10)) #看係數\ntt = {Traingdata$流量-mean(Traingdata$流量)}/sd(Traingdata$流量)+2\ntt = {(tt^0.1-1)/0.1}*{{{cumprod(tt)[108]}^{1/108}}^(1-0.1)}\n# 想辦法轉回去～～\nk <- {{{cumprod(tt)[108]}^{1/108}}^(1-0.1)}\n(tt/(10*k)+1)^10\nhist(tt)\nks.test({tt-mean(tt)}/sd(tt), \"pnorm\")\n\nTraingdata[,3] =tt\n\n###### 最終模型\nlm <- lm( 流量 ~ 房價中位數 + 工業區 + 商業區 + 住宅區+  I(房價中位數 * X15.64 * (5*住宅區 -商業區 - 工業區)) , data=Traingdata[-68,] )\nsummary(lm)\n\n# 丟Testing 進去\nTestingdata <- mutate(Testingdata,v=房價中位數 * X15.64 * (5 * 住宅區 - 商業區 - 工業區))\n\nn=as.numeric(lm$coefficients)\nTestingdata <- mutate(Testingdata, result=n[1]+Testingdata[,5]*n[2]+Testingdata[,9]*n[3]+Testingdata[,10]*n[4]+Testingdata[,11]*n[5]+ Testingdata[,12]*n[6]) \npredict(lm)\n\n  # Traingdata 試試看\ncbind(as.character(Traingdata$mrt), n[1]+Traingdata[,5]*n[2]+Traingdata[,9]*n[3]+Traingdata[,10]*n[4]+Traingdata[,11]*n[5]+ Traingdata[,12]*n[6]) %>% \n  cbind(Traingdata$流量) %>% View()\n\n##### Testing data ######################\ntesting <- read.csv(\"TestingData.csv\", fileEncoding = \"big5\")\ntest.age <-  mrt.age$sum %*% as.matrix(mrt.age[,114:137]) %>% round() %>% t() %>%\n  as.data.frame() %>%\n  mutate(name=testing$捷運站)  \ncolnames(test.age)[1] = \"15-64\" \n\nTestingdata <- merge(testing, p[109:132,], by.x=\"捷運站\", by.y=\"name\", all=T) %>% \n  merge( test.age, by.x=\"捷運站\", by.y=\"name\", all=T) %>% \n  mutate(age.ratio=`15-64`/平均人口) %>%\n  merge(m[109:132, ] , by.x=\"捷運站\", by.y=\"name\", all=T) \n\n##### read XML #####\nlibrary(xml2)\nlibrary(XML)\nlibrary(\"methods\")\n\ndoc1 <- read_xml(\"O-A0001-001.xml\")\nclass(doc1)\npoint <- doc1 %>% xml_find_all(\"//lat\")\n\n\ndd <- xmlParse(\"O-A0001-001.xml\", encoding = \"utf8\")\nclass(dd)\nxmltop = xmlRoot(dd)\nxmltop <- xmlSApply(xmltop,function(x) xmlSApply(x, xmlValue))\nxml_df <- data.frame(t(xmltop))\nxml_df <- xml_df[-c(1:8)] %>% t()\nxml_df[2] %>% unlist() %>% strsplit(\",\") %>% View()\n\nprint(xmltop[1])\nprint(xmltop[[7]][[1]])\nxml <- xmlToDataFrame(\"O-A0001-001.xml\")\nxmlName(xmltop)\nxmlSize(xmltop)\nxmlName(xmltop[[1]]) \nxmltop[[1]]\nxmlSize(xmltop[[1]])#number of nodes in each child\nxmlSApply(xmltop[[1]], xmlName)\n\nxmltop[[2]][[1]]\nxmltop[[1]][[1]][[5]][[2]]\n\nxml_data <- xmlToList(dd)\nxml_data <- xml_data[-c(1:8)]\nxmldataframe <- xmlToDataFrame(xml_data)\n\nlocation <- as.list(xml_data[[\"location\"]])\nlocation$weatherElement\n\nlocation <- as.list(xml_data[[\"data\"]][[\"location\"]][[\"point\"]])\nunlist(location)\nloca <- unlist(xml_data[[\"location\"]][names(xml_data[[\"location\"]]) == \"lat\" ])\n\n#### 讀檔 #####\nTraingdata <- read.csv(\"TrainingData.csv\", fileEncoding = \"big5\")\nTestingdata <- read.csv(\"TestingData.csv\", fileEncoding = \"big5\")\nTestingdata <- Testingdata[1:24,]\nTestingdata <- mutate(Testingdata, 流人= 預估流量/平均人口)\n\n#### k-means #####\na = kmeans(Traingdata$流量, 3, 20)\na1 = {Data[a$cluster == 1,]}[,1:2]\na2 = {Data[a$cluster == 2,]}[,1:2]\na3 = {Data[a$cluster == 3,]}[,1:2]\na4 = {Data[a$cluster == 4,]}[,1:2]\na$cluster <- as.factor(a$cluster)\nggplot(Traingdata, aes(流量, 房價中位數, color = a$cluster)) + \n  geom_point() +\n  theme_grey(base_family=\"STHeiti\")  \n\nx <- Traingdata$流量\nx <- (x-mean(x))/sd(x)\nt <- Traingdata$公車種類數\nt <- (t-mean(t))/sd(t)\nb <- kmeans(cbind(x,t), 4,20)\n\nc <- kmeans(cbind(x,Traingdata[,4]*Traingdata[,7] ), 4, 20)\nb$cluster <- as.factor(b$cluster)\nggplot(Traingdata, aes(流量, 公車種類數, color =b$cluster  )) + \n  geom_point() +\n  theme_grey(base_family=\"STHeiti\")\n\n  annotate(\"text\", x=Traingdata$流量, y=Traingdata$平均人口+2, label = Traingdata$mrt ,family=\"STHeiti\", colour = \"black\", size=2)+\n\n",
    "created" : 1491816781866.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4236115619",
    "id" : "ABC7DBA2",
    "lastKnownWriteTime" : 1495040914,
    "last_content_update" : 1495040914251,
    "path" : "~/nicole/R code/other/nccu_mrtcomptition.R",
    "project_path" : "nccu_mrtcomptition.R",
    "properties" : {
        "docOutlineSize" : "110",
        "docOutlineVisible" : "1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}